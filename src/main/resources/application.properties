# AUTHENTICATED
quarkus.http.auth.permission.health.paths=/q/*
quarkus.http.auth.permission.health.policy=permit
quarkus.http.auth.permission.default.paths=/*
quarkus.http.auth.permission.default.policy=authenticated

onecx.permissions.application-id=${quarkus.application.name}

# propagate the apm-principal-token from requests we receive
org.eclipse.microprofile.rest.client.propagateHeaders=apm-principal-token

# PROD
%prod.quarkus.rest-client.onecx_user_profile_svc.url=http://onecx-user-profile-svc:8080
%prod.quarkus.oidc-client.client-id=${quarkus.application.name}

# DEV
%dev.quarkus.oidc-client.auth-server-url=${quarkus.oidc.auth-server-url}
%dev.quarkus.oidc-client.client-id=${quarkus.oidc.client-id}
%dev.quarkus.oidc-client.credentials.secret=${quarkus.oidc.credentials.secret}
%dev.quarkus.rest-client.onecx_user_profile_svc.url=${quarkus.mockserver.endpoint}
%dev.quarkus.rest-client.onecx_permission.url=${quarkus.mockserver.endpoint}
%dev.quarkus.rest-client.onecx-permission.url=${quarkus.mockserver.endpoint}
%dev.quarkus.mockserver.devservices.config-file=src/test/resources/mockserver.properties
%dev.quarkus.mockserver.devservices.config-dir=src/test/resources/mockserver

# BUILD
quarkus.openapi-generator.codegen.input-base-dir=target/tmp/openapi
quarkus.openapi-generator.codegen.spec.onecx_userprofile_internal_openapi_yaml.config-key=onecx_user_profile_svc
quarkus.openapi-generator.codegen.spec.onecx_userprofile_internal_openapi_yaml.base-package=gen.org.tkit.onecx.user.profile.bff.clients
quarkus.openapi-generator.codegen.spec.onecx_userprofile_internal_openapi_yaml.return-response=true
quarkus.openapi-generator.codegen.spec.onecx_userprofile_internal_openapi_yaml.additional-api-type-annotations=@org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;

# INTEGRATION TEST
quarkus.test.integration-test-profile=test

# TEST
%test.quarkus.keycloak.devservices.roles.alice=role-admin
%test.quarkus.keycloak.devservices.roles.bob=role-user
%test.quarkus.oidc-client.auth-server-url=${quarkus.oidc.auth-server-url}
%test.quarkus.oidc-client.client-id=${quarkus.oidc.client-id}
%test.quarkus.oidc-client.credentials.secret=${quarkus.oidc.credentials.secret}
#%test.quarkus.oidc-client.auth-server-url=${keycloak.url}/realms/quarkus/
#%test.quarkus.oidc-client.client-id=quarkus-app
#%test.quarkus.oidc-client.credentials.secret=secret
%test.quarkus.http.test-port=0
%test.tkit.rs.context.tenant-id.mock.claim-org-id=orgId
%test.tkit.rs.context.token.header-param=apm-principal-token
%test.tkit.log.json.enabled=false
%test.quarkus.mockserver.devservices.config-class-path=true
%test.quarkus.mockserver.devservices.config-file=/mockserver.properties
%test.quarkus.mockserver.devservices.config-dir=/mockserver
%test.quarkus.mockserver.devservices.log=false
%test.quarkus.mockserver.devservices.reuse=true
%test.quarkus.rest-client.onecx_user_profile_svc.url=${quarkus.mockserver.endpoint}
%test.quarkus.rest-client.onecx_user_profile_svc.providers=io.quarkus.oidc.client.reactive.filter.OidcClientRequestReactiveFilter
%test.quarkus.rest-client.onecx_permission.url=${quarkus.mockserver.endpoint}
%test.tkit.rs.context.token.enabled=false
%test.org.eclipse.microprofile.rest.client.propagateHeaders=apm-principal-token,custom-flow
%test.onecx.permissions.product-name=applications

# PIPE CONFIG

